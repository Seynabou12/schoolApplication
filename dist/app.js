/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./script.js":
/*!*******************!*\
  !*** ./script.js ***!
  \*******************/
/***/ (() => {

eval("const API_KEY = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJyb2xlIjoiYW5vbiIsImlhdCI6MTYzOTU4OTY2NiwiZXhwIjoxOTU1MTY1NjY2fQ.61uxHqbNW70gKjOYqYVZ_xrG7sZlocp8vy37SSf2KHM\"\nconst API_URL = \"https://begawfkjokyyfiqpcwzp.supabase.co/rest/v1/Apprenant\"\n\n//Récuperer les éléments du DOM\nvar error\nconst listApprenant = []\nconst positionElement = document.getElementById(\"formulaire\")\nconst inputNom = document.querySelector(\"#nom\")\nconst inputPrenom = document.querySelector(\"#prenom\")\nconst inputEmail = document.querySelector(\"#email\")\nconst inputNiveau = document.querySelector(\"#niveau\")\nconst inputBiographie = document.querySelector(\"#biographie\")\nconst inputPhoto = document.querySelector(\"#photo\")\nconst carteContainer = document.querySelector(\".carte\")\nconst sauvegarde = document.querySelector(\".save\")\nconst enregistrer = document.querySelector(\"#sauvegarde\")\nconst ajout = document.querySelector(\".btn-ajout\")\nconst btnModifier = document.querySelector(\".btn-edit\")\nconst redirection =  document.querySelector(\".liste\")\n\n\n// RECUPERATION DES INFORMATIONS DU FORMULAIRE\npositionElement.addEventListener(\"submit\", (event) => {\n    event.preventDefault()\n    if (inputNom.value.trim() == \"\" || inputPrenom.value.trim() == \"\" || \n    inputEmail.value.trim() == \"\") {\n      const error = document.getElementById(\"error\")\n      error.innerHTML = \"Tous les champs sont requis\"\n      error.style.color = \"red\"\n    }\n\n  // Récupération des informations saisies\n    const nomSaisi = inputNom.value\n    const prenomSaisi = inputPrenom.value\n    const emailSaisi = inputEmail.value\n    const biographieSaisi = inputBiographie.value\n    const niveauSaisi = inputNiveau.value\n    const newApprenant = {\n            prenom:prenomSaisi,\n            nom:nomSaisi,\n            email:emailSaisi,\n            biographie:biographieSaisi,\n            niveau:niveauSaisi\n          }\n    carteApprenant(newApprenant)\n    positionElement.reset()\n  })\n  //Affichage de la carte\n  function carteApprenant (apprenant){\n    let id = Math.random().toString()\n    sauvegarde.insertAdjacentHTML(\"beforeend\", `\n        <div class=\"card mt-3  mb-3\" id=\"${id}\">\n          <div class=\"profil mt-2 \">\n              <p><img src=\"./images/nabou.png\" alt=\"\" srcset=\"\" class=\"photo\">${apprenant.photo}</p>\n              <img src=\"./images/pencil.png\" class=\"bi bi-pencil\">\n              <div class=\"trash-icon\"><img src=\"./images/trash.png\" class=\"bi bi-trash\"></div>\n          </div>\n            <div class=\"card-body profil-main\">\n              <h6 class=\"profil-nom\" data-nom=\"${apprenant.nom}\" data-prenom=\"${apprenant.prenom}\" ><span class=\"app-nom\">${apprenant.nom}</span> <span class=\"app-prenom\">${apprenant.prenom}</span></h6>\n              <p class=\"email\">${apprenant.email}</p>\n              <p class=\"profil-body\">${apprenant.biographie}</p>\n              <br>\n              <p class=\"profil-position\">${apprenant.niveau}</p>\n            </div>\n        </div>`)\n\n        //Suppression des cartes en local\n        let card = document.querySelector(`.card[id=\"${id}\"]`)\n        const supprimer = card.querySelector(\".bi-trash\") \n        supprimer.addEventListener('click', (e) => {\n          e.target.parentElement.parentElement.parentElement.remove()\n          if(confirm(\"voulez-vous vraiment supprimer cette carte\")){}\n        })\n        \n          //Modification de la carte en local\n          const modifier = card.querySelector(\".bi-pencil\")\n          modifier.addEventListener('click', (event) => {\n          ajout.classList.add(\"cacher\")\n          btnModifier.classList.remove(\"cacher\")\n          if(confirm(\"voulez-vous vraiment modifier cette carte\")){}\n          const nom = card.querySelector(\".profil-nom\").dataset.nom\n          const prenom = card.querySelector(\".profil-nom\").dataset.prenom\n          const appNom = card.querySelector(\".app-nom\")\n          const appPrenom = card.querySelector(\".app-prenom\")\n          const email = card.querySelector(\".email\").textContent\n          const Email = card.querySelector(\".email\")\n          const Bio = card.querySelector(\".profil-body\")\n          const bio = card.querySelector(\".profil-body\").textContent\n          const niveau = card.querySelector(\".profil-position\").textContent\n          const Niveau = card.querySelector(\".profil-position\")\n          \n          inputNom.value = nom\n          inputPrenom.value = prenom\n          inputEmail.value = email\n          inputBiographie.value = bio\n          inputNiveau.value = niveau\n          // inputPhoto.value = photo\n\n          btnModifier.addEventListener(\"click\", (event) => {\n            btnModifier.classList.add(\"cacher\")\n            ajout.classList.remove(\"cacher\")\n            apprenant.nom = inputNom.value\n            apprenant.prenom = inputPrenom.value\n            apprenant.email = inputEmail.value\n            apprenant.biographie = inputBiographie.value\n            apprenant.niveau = inputNiveau.value\n\n            appNom.textContent = apprenant.nom\n            appPrenom.textContent =  apprenant.prenom\n            Email.textContent = apprenant.email\n            Bio.textContent = apprenant.biographie\n            Niveau.textContent = apprenant.niveau\n          })\n        }) \n      }\n\n    // Verifiation des mots saisis\n    inputBiographie.addEventListener(\"input\", (event) => {\n    const longueurMax = 130\n    const contenuSaisi = inputBiographie.value\n    const longueurSaisi = contenuSaisi.length\n    const reste = longueurMax - longueurSaisi\n\n    //actualiser le dom pour afficher le nombre\n    const paragraph = document.getElementById(\"limit\")\n    const text = document.getElementById(\"progress\")\n    text.textContent = longueurSaisi\n\n    if (reste <= 5) {\n      paragraph.style.color = \"#ce0033\"\n      ajout.disabled = false\n    } else {\n      paragraph.style.color = \"#00000\"\n      ajout.disabled = false\n    }\n  })\n\n  //Enregistrement au niveau de SUPABASE\n//   enregistrer.addEventListener(\"click\", (event) => {\n//     event.preventDefault()\n//     //ENVOYER LES DONNEES VERS SUPABASE\n//     fetch(API_URL, {\n//     method: \"POST\",\n//     headers: {\n//       apikey: API_KEY,\n//       \"Content-Type\": \"application/json\",\n//     },\n//     body: JSON.stringify(newApprenant)\n//   })\n// })\n\n//# sourceURL=webpack://schoolapplication/./script.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./script.js"]();
/******/ 	
/******/ })()
;